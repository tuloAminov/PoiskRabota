/*getVacancies("https://api.hh.ru/vacancies?text=java&experience=noExperience&area=2");
                getVacancies("https://api.zarplata.ru/vacancies?text=java");
                sendMessage(chatId, vacancyService.vacancies().get(0).toString());
                sendMessage(chatId, vacancyService.vacancies().get(1).toString());
                sendMessage(chatId, vacancyService.vacancies().get(2).toString());

                Vacancy vacancy2 = vacancyService.vacancies().get(0);
                ArrayList<Vacancy> vacancies2 = new ArrayList<>();
                vacancies2.add(vacancy2);
                sendMessage(chatId, String.valueOf(vacancies2.contains(vacancy2)));
                sendMessage(chatId, vacancyService.existsVacancy(vacancyService.vacancies().get(0)));*/


/*EditMessageText message = new EditMessageText();
        message.setChatId(chatId);
        message.setText(text);
        message.setMessageId((int) messageId);

        executeEditMessage(message);*/




if(update.hasMessage() && update.getMessage().hasText()) {
            String messageText = update.getMessage().getText();
            long chatId = update.getMessage().getChatId();
            String name = update.getMessage().getForwardSenderName();
            if (messageText.contains("/start")) {
                startCommandReceived(chatId, name);
            }

            else if(messageText.contains("/find")) {
                getUserParams(chatId);
            }

            else {
                sendMessage(chatId, "errorrrrr");
            }
        }